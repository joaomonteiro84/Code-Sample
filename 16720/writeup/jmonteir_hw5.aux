\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Code snippet of the function initialize\_weights\relax }}{8}{figure.caption.1}\protected@file@percent }
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:initialize_weights}{{1}{8}{Code snippet of the function initialize\_weights\relax }{figure.caption.1}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Code snippet of the function sigmoid\relax }}{10}{figure.caption.2}\protected@file@percent }
\newlabel{fig:sigmoid}{{2}{10}{Code snippet of the function sigmoid\relax }{figure.caption.2}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces Code snippet of the function softmax\relax }}{11}{figure.caption.3}\protected@file@percent }
\newlabel{fig:softmax}{{3}{11}{Code snippet of the function softmax\relax }{figure.caption.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Code snippet of the function compute\_loss\_and\_acc\relax }}{12}{figure.caption.4}\protected@file@percent }
\newlabel{fig:loss}{{4}{12}{Code snippet of the function compute\_loss\_and\_acc\relax }{figure.caption.4}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Code snippet of the function backwards\relax }}{13}{figure.caption.5}\protected@file@percent }
\newlabel{fig:backwards}{{5}{13}{Code snippet of the function backwards\relax }{figure.caption.5}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Code snippet of the function get\_random\_batches\relax }}{14}{figure.caption.6}\protected@file@percent }
\newlabel{fig:batches}{{6}{14}{Code snippet of the function get\_random\_batches\relax }{figure.caption.6}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Code snippet of the training loop (in python/run\_q2.py) that iterates over the batches, does foward and backward propagation, and applies gradient update.\relax }}{14}{figure.caption.7}\protected@file@percent }
\newlabel{fig:forward_backward}{{7}{14}{Code snippet of the training loop (in python/run\_q2.py) that iterates over the batches, does foward and backward propagation, and applies gradient update.\relax }{figure.caption.7}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Code snippet of the numerical gradient checker (in python/run\_q2.py).\relax }}{15}{figure.caption.8}\protected@file@percent }
\newlabel{fig:gradient_checker}{{8}{15}{Code snippet of the numerical gradient checker (in python/run\_q2.py).\relax }{figure.caption.8}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Loss and accuracy over the epochs for training (blue lines) and validation (orange lines) datasets\relax }}{16}{figure.caption.9}\protected@file@percent }
\newlabel{fig:q_3_1}{{9}{16}{Loss and accuracy over the epochs for training (blue lines) and validation (orange lines) datasets\relax }{figure.caption.9}{}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Validation and test accuracies after training same neural network architecture for 600 epochs using distinct learning rates: 0.0001, 0.001 and 0.01\relax }}{17}{table.caption.10}\protected@file@percent }
\newlabel{tab:acc_comparison}{{1}{17}{Validation and test accuracies after training same neural network architecture for 600 epochs using distinct learning rates: 0.0001, 0.001 and 0.01\relax }{table.caption.10}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces Loss and accuracy over the epochs for training (blue lines) and validation (orange lines) datasets for three different learning rates: 0.00001 (a, b), 0.0001 (c, d) and 0.001 (e, f)\relax }}{18}{figure.caption.11}\protected@file@percent }
\newlabel{fig:q_3_2}{{10}{18}{Loss and accuracy over the epochs for training (blue lines) and validation (orange lines) datasets for three different learning rates: 0.00001 (a, b), 0.0001 (c, d) and 0.001 (e, f)\relax }{figure.caption.11}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces First layer weights after initialization but before training (a) and after training (b)\relax }}{19}{figure.caption.12}\protected@file@percent }
\newlabel{fig:q_3_3}{{11}{19}{First layer weights after initialization but before training (a) and after training (b)\relax }{figure.caption.12}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces Confusion matrix of the test data\relax }}{20}{figure.caption.13}\protected@file@percent }
\newlabel{fig:q_3_4}{{12}{20}{Confusion matrix of the test data\relax }{figure.caption.13}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {13}{\ignorespaces Example images where character detection algorithm is expected to fail\relax }}{21}{figure.caption.14}\protected@file@percent }
\newlabel{fig:q_4_1}{{13}{21}{Example images where character detection algorithm is expected to fail\relax }{figure.caption.14}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {14}{\ignorespaces Code snippet of the function findLetters.\relax }}{22}{figure.caption.15}\protected@file@percent }
\newlabel{fig:findletters}{{14}{22}{Code snippet of the function findLetters.\relax }{figure.caption.15}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {15}{\ignorespaces Bounding boxes using function findLetters\relax }}{23}{figure.caption.16}\protected@file@percent }
\newlabel{fig:q_4_23}{{15}{23}{Bounding boxes using function findLetters\relax }{figure.caption.16}{}}
\@writefile{lot}{\contentsline {table}{\numberline {2}{\ignorespaces Character extracting results\relax }}{24}{table.caption.17}\protected@file@percent }
\newlabel{tbl:q_4_4}{{2}{24}{Character extracting results\relax }{table.caption.17}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {16}{\ignorespaces Code snippet of the autoencoder specified in the handout.\relax }}{25}{figure.caption.18}\protected@file@percent }
\newlabel{fig:auto_encoder}{{16}{25}{Code snippet of the autoencoder specified in the handout.\relax }{figure.caption.18}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {17}{\ignorespaces Code snippet of the autoencoder (with momentum) specified in the handout.\relax }}{26}{figure.caption.19}\protected@file@percent }
\newlabel{fig:auto_encoder2}{{17}{26}{Code snippet of the autoencoder (with momentum) specified in the handout.\relax }{figure.caption.19}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {18}{\ignorespaces Training loss curve\relax }}{27}{figure.caption.20}\protected@file@percent }
\newlabel{fig:q_5_2}{{18}{27}{Training loss curve\relax }{figure.caption.20}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {19}{\ignorespaces Auto encoder - Original (columns 1 and 3) versus reconstructed (columns 2 and 4) images\relax }}{28}{figure.caption.21}\protected@file@percent }
\newlabel{fig:q_5_3_1}{{19}{28}{Auto encoder - Original (columns 1 and 3) versus reconstructed (columns 2 and 4) images\relax }{figure.caption.21}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {20}{\ignorespaces Loss and accuracy over the epochs for training (blue lines) and validation (orange lines) datasets - using PyTorch\relax }}{30}{figure.caption.22}\protected@file@percent }
\newlabel{fig:q_6_1_1}{{20}{30}{Loss and accuracy over the epochs for training (blue lines) and validation (orange lines) datasets - using PyTorch\relax }{figure.caption.22}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {21}{\ignorespaces Code snippet of the fully-connected network implemented using PyTorch\relax }}{30}{figure.caption.23}\protected@file@percent }
\newlabel{fig:cnn1}{{21}{30}{Code snippet of the fully-connected network implemented using PyTorch\relax }{figure.caption.23}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {22}{\ignorespaces Code snippet of the CNN implemented using PyTorch - NIST36 dataset\relax }}{31}{figure.caption.24}\protected@file@percent }
\newlabel{fig:cnn2}{{22}{31}{Code snippet of the CNN implemented using PyTorch - NIST36 dataset\relax }{figure.caption.24}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {23}{\ignorespaces Training loss and accuracy over the epochs - CIFAR-10 dataset\relax }}{32}{figure.caption.25}\protected@file@percent }
\newlabel{fig:q_6_1_3}{{23}{32}{Training loss and accuracy over the epochs - CIFAR-10 dataset\relax }{figure.caption.25}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {24}{\ignorespaces Code snippet of the CNN implemented using PyTorch - CIFAR-10 dataset\relax }}{32}{figure.caption.26}\protected@file@percent }
\newlabel{fig:cnn3}{{24}{32}{Code snippet of the CNN implemented using PyTorch - CIFAR-10 dataset\relax }{figure.caption.26}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {25}{\ignorespaces Code snippet of the CNN implemented using PyTorch - SUN dataset\relax }}{33}{figure.caption.27}\protected@file@percent }
\newlabel{fig:cnn4}{{25}{33}{Code snippet of the CNN implemented using PyTorch - SUN dataset\relax }{figure.caption.27}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {26}{\ignorespaces Frames 0, 90, 180 and 270 of the rotweiller video\relax }}{35}{figure.caption.28}\protected@file@percent }
\newlabel{fig:q_6_3}{{26}{35}{Frames 0, 90, 180 and 270 of the rotweiller video\relax }{figure.caption.28}{}}
